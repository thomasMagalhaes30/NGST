{"version":3,"file":"src_app_pages_localisation_localisation_module_ts.js","mappings":"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","sources":["./src/app/components/map/map.component.ts","./src/app/pages/localisation/localisation-routing.module.ts","./src/app/pages/localisation/localisation.module.ts","./src/app/pages/localisation/localisation.page.ts","./src/app/services/localisation/map.service.ts","./node_modules/@capacitor/geolocation/dist/esm/definitions.js","./node_modules/@capacitor/geolocation/dist/esm/index.js","./node_modules/@capacitor/google-maps/dist/esm/definitions.js","./node_modules/@capacitor/google-maps/dist/esm/implementation.js","./node_modules/@capacitor/google-maps/dist/esm/index.js","./node_modules/@capacitor/google-maps/dist/esm/map.js"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.scss'],\n})\nexport class MapComponent implements OnInit {\n\n  @Input()\n  public map: Object = {};\n\n  @Input()\n  public geo: Object = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocalisationPage } from './localisation.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LocalisationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LocalisationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LocalisationPageRoutingModule } from './localisation-routing.module';\n\nimport { LocalisationPage } from './localisation.page';\nimport { MapComponent } from '@app/components/map/map.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LocalisationPageRoutingModule\n  ],\n  declarations: [LocalisationPage, MapComponent],\n  exports: [ MapComponent ]\n})\nexport class LocalisationPageModule {}\n","import { Component, OnInit, Output, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MapService } from 'src/app/services/localisation/map.service';\nimport { GoogleMap } from '@capacitor/google-maps';\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-localisation',\n  templateUrl: './localisation.page.html',\n  styleUrls: ['./localisation.page.scss'],\n})\nexport class LocalisationPage implements OnInit, OnDestroy {\n\n  public name: string = \"Localisation\";\n\n  @Output()\n  public mapLocalisation = {};\n\n  @Output()\n  public geoError = {};\n\n  private subscribtion: Subscription;\n\n  constructor(private _map : MapService) { }\n\n  ngOnInit() {\n\n    this._map.getPositionByGeolocation()\n    .then( async r => {\n      const lon = r.coords.longitude;\n      const lat = r.coords.latitude;\n      this.subscribtion = await this._map.getCoordinateByLocalisation(lat.toString(),lon.toString())\n        .subscribe( coords => {\n          this.mapLocalisation = coords;\n        });\n      \n      const mapRef = document.getElementById('map');\n\n      const map = await GoogleMap.create({\n        id: 'my-map', // Unique identifier for this map instance\n        element: mapRef, // reference to the capacitor-google-map element\n        apiKey: environment.mapApiKey, // Your Google Maps API Key\n        config: {\n          center: {\n            // The initial position to be rendered by the map\n            lat: lat,\n            lng: lon,\n          },\n          zoom: 15, // The initial zoom level to be rendered by the map\n        },\n      });\n\n      await map.addMarker({\n        coordinate: {\n          lat: lat,\n          lng: lon,\n        },\n        title: 'Your position 🚀',\n      });\n    })\n    .catch(error => this.geoError = error);\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribtion) {\n      this.subscribtion.unsubscribe();\n    }\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ICoordinate} from \"@entities/coordinate\";\nimport {HttpClient, HttpErrorResponse, HttpParams} from \"@angular/common/http\";\nimport {Observable, of} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {Geolocation, Position} from '@capacitor/geolocation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MapService {\n\n  private static defaultCoordinate: ICoordinate = {\n    \"latitude\": \"0\",\n    \"longitude\": \"0\",\n    \"timezone_id\": \"\",\n    \"offset\": 0,\n    \"country_code\": \"\",\n    \"map_url\": \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons/angularjs/angularjs-original.svg\",\n  };\n\n  constructor(private _httpClient : HttpClient) { }\n\n  public getCoordinateByLocalisation(latitude : String, longitude : String) : Observable<ICoordinate> {\n    let params = new HttpParams();\n\n    // en cas d'erreur on retourne un coordinate par défaut\n    return this._httpClient.get<ICoordinate>(`https://api.wheretheiss.at/v1/coordinates/${latitude},${longitude}`, {params})\n      .pipe(\n        catchError(error => {\n          let defaultCoordinate = { ...MapService.defaultCoordinate };\n          if (error instanceof HttpErrorResponse){\n            defaultCoordinate.map_url = `Une erreur ${error.status} est survenu (${error.error})`;\n          }\n          return of(defaultCoordinate);\n        })\n      );\n  }\n\n  public async getPositionByGeolocation() :  Promise<Position> {\n    return Geolocation.getCurrentPosition();\n  }\n\n}\n","export {};\n","import { registerPlugin } from '@capacitor/core';\nconst Geolocation = registerPlugin('Geolocation', {\n    web: () => import('./web').then(m => new m.GeolocationWeb()),\n});\nexport * from './definitions';\nexport { Geolocation };\n","export var MapType;\n(function (MapType) {\n    /**\n     * Basic map.\n     */\n    MapType[\"Normal\"] = \"Normal\";\n    /**\n     * Satellite imagery with roads and labels.\n     */\n    MapType[\"Hybrid\"] = \"Hybrid\";\n    /**\n     * Satellite imagery with no labels.\n     */\n    MapType[\"Satellite\"] = \"Satellite\";\n    /**\n     * Topographic data.\n     */\n    MapType[\"Terrain\"] = \"Terrain\";\n    /**\n     * No base map tiles.\n     */\n    MapType[\"None\"] = \"None\";\n})(MapType || (MapType = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst CapacitorGoogleMaps = registerPlugin('CapacitorGoogleMaps', {\n    web: () => import('./web').then(m => new m.CapacitorGoogleMapsWeb()),\n});\nCapacitorGoogleMaps.addListener('isMapInFocus', data => {\n    var _a;\n    const x = data.x;\n    const y = data.y;\n    const elem = document.elementFromPoint(x, y);\n    const internalId = (_a = elem === null || elem === void 0 ? void 0 : elem.dataset) === null || _a === void 0 ? void 0 : _a.internalId;\n    const mapInFocus = internalId === data.mapId;\n    CapacitorGoogleMaps.dispatchMapEvent({ id: data.mapId, focus: mapInFocus });\n});\nexport { CapacitorGoogleMaps };\n","/* eslint-disable @typescript-eslint/no-namespace */\nimport { MapType } from './definitions';\nimport { GoogleMap } from './map';\nexport { GoogleMap, MapType };\n","import { Capacitor } from '@capacitor/core';\nimport { CapacitorGoogleMaps } from './implementation';\nclass MapCustomElement extends HTMLElement {\n    constructor() {\n        super();\n    }\n    connectedCallback() {\n        console.log(Capacitor.getPlatform());\n        if (Capacitor.getPlatform() == 'ios') {\n            this.style.overflow = 'scroll';\n            this.style['-webkit-overflow-scrolling'] = 'touch';\n            const overflowDiv = document.createElement('div');\n            overflowDiv.style.height = '200%';\n            this.appendChild(overflowDiv);\n        }\n    }\n}\ncustomElements.define('capacitor-google-map', MapCustomElement);\nexport class GoogleMap {\n    constructor(id) {\n        this.element = null;\n        this.handleScrollEvent = () => this.updateMapBounds();\n        this.id = id;\n    }\n    /**\n     * Creates a new instance of a Google Map\n     * @param options\n     * @param callback\n     * @returns GoogleMap\n     */\n    static async create(options, callback) {\n        const newMap = new GoogleMap(options.id);\n        if (!options.element) {\n            throw new Error('container element is required');\n        }\n        if (options.config.androidLiteMode === undefined) {\n            options.config.androidLiteMode = false;\n        }\n        newMap.element = options.element;\n        newMap.element.dataset.internalId = options.id;\n        const elementBounds = options.element.getBoundingClientRect();\n        options.config.width = elementBounds.width;\n        options.config.height = elementBounds.height;\n        options.config.x = elementBounds.x;\n        options.config.y = elementBounds.y;\n        options.config.devicePixelRatio = window.devicePixelRatio;\n        if (Capacitor.getPlatform() == 'android') {\n            newMap.initScrolling();\n        }\n        if (Capacitor.isNativePlatform()) {\n            options.element = {};\n        }\n        await CapacitorGoogleMaps.create(options);\n        if (callback) {\n            const onMapReadyListener = await CapacitorGoogleMaps.addListener('onMapReady', (data) => {\n                if (data.mapId == newMap.id) {\n                    callback(data);\n                    onMapReadyListener.remove();\n                }\n            });\n        }\n        return newMap;\n    }\n    /**\n     * Enable marker clustering\n     *\n     * @returns void\n     */\n    async enableClustering() {\n        return CapacitorGoogleMaps.enableClustering({\n            id: this.id,\n        });\n    }\n    /**\n     * Disable marker clustering\n     *\n     * @returns void\n     */\n    async disableClustering() {\n        return CapacitorGoogleMaps.disableClustering({\n            id: this.id,\n        });\n    }\n    /**\n     * Adds a marker to the map\n     *\n     * @param marker\n     * @returns created marker id\n     */\n    async addMarker(marker) {\n        const res = await CapacitorGoogleMaps.addMarker({\n            id: this.id,\n            marker,\n        });\n        return res.id;\n    }\n    /**\n     * Adds multiple markers to the map\n     *\n     * @param markers\n     * @returns array of created marker IDs\n     */\n    async addMarkers(markers) {\n        const res = await CapacitorGoogleMaps.addMarkers({\n            id: this.id,\n            markers,\n        });\n        return res.ids;\n    }\n    /**\n     * Remove marker from the map\n     *\n     * @param id id of the marker to remove from the map\n     * @returns\n     */\n    async removeMarker(id) {\n        return CapacitorGoogleMaps.removeMarker({\n            id: this.id,\n            markerId: id,\n        });\n    }\n    /**\n     * Remove markers from the map\n     *\n     * @param ids array of ids to remove from the map\n     * @returns\n     */\n    async removeMarkers(ids) {\n        return CapacitorGoogleMaps.removeMarkers({\n            id: this.id,\n            markerIds: ids,\n        });\n    }\n    /**\n     * Destroy the current instance of the map\n     */\n    async destroy() {\n        if (Capacitor.getPlatform() == 'android') {\n            this.disableScrolling();\n        }\n        this.removeAllMapListeners();\n        return CapacitorGoogleMaps.destroy({\n            id: this.id,\n        });\n    }\n    /**\n     * Update the map camera configuration\n     *\n     * @param config\n     * @returns\n     */\n    async setCamera(config) {\n        return CapacitorGoogleMaps.setCamera({\n            id: this.id,\n            config,\n        });\n    }\n    /**\n     * Sets the type of map tiles that should be displayed.\n     *\n     * @param mapType\n     * @returns\n     */\n    async setMapType(mapType) {\n        return CapacitorGoogleMaps.setMapType({\n            id: this.id,\n            mapType,\n        });\n    }\n    /**\n     * Sets whether indoor maps are shown, where available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableIndoorMaps(enabled) {\n        return CapacitorGoogleMaps.enableIndoorMaps({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Controls whether the map is drawing traffic data, if available.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableTrafficLayer(enabled) {\n        return CapacitorGoogleMaps.enableTrafficLayer({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Show accessibility elements for overlay objects, such as Marker and Polyline.\n     *\n     * Only available on iOS.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableAccessibilityElements(enabled) {\n        return CapacitorGoogleMaps.enableAccessibilityElements({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set whether the My Location dot and accuracy circle is enabled.\n     *\n     * @param enabled\n     * @returns\n     */\n    async enableCurrentLocation(enabled) {\n        return CapacitorGoogleMaps.enableCurrentLocation({\n            id: this.id,\n            enabled,\n        });\n    }\n    /**\n     * Set padding on the 'visible' region of the view.\n     *\n     * @param padding\n     * @returns\n     */\n    async setPadding(padding) {\n        return CapacitorGoogleMaps.setPadding({\n            id: this.id,\n            padding,\n        });\n    }\n    /**\n     * Get the map's current viewport latitude and longitude bounds.\n     *\n     * @returns {LatLngBounds}\n     */\n    async getMapBounds() {\n        return CapacitorGoogleMaps.getMapBounds({\n            id: this.id,\n        });\n    }\n    initScrolling() {\n        const ionContents = document.getElementsByTagName('ion-content');\n        // eslint-disable-next-line @typescript-eslint/prefer-for-of\n        for (let i = 0; i < ionContents.length; i++) {\n            ionContents[i].scrollEvents = true;\n        }\n        window.addEventListener('ionScroll', this.handleScrollEvent);\n        window.addEventListener('scroll', this.handleScrollEvent);\n        window.addEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.addEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n        else {\n            window.addEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 500);\n            });\n        }\n    }\n    disableScrolling() {\n        window.removeEventListener('ionScroll', this.handleScrollEvent);\n        window.removeEventListener('scroll', this.handleScrollEvent);\n        window.removeEventListener('resize', this.handleScrollEvent);\n        if (screen.orientation) {\n            screen.orientation.removeEventListener('change', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n        else {\n            window.removeEventListener('orientationchange', () => {\n                setTimeout(this.updateMapBounds, 1000);\n            });\n        }\n    }\n    updateMapBounds() {\n        if (this.element) {\n            const mapRect = this.element.getBoundingClientRect();\n            CapacitorGoogleMaps.onScroll({\n                id: this.id,\n                mapBounds: {\n                    x: mapRect.x,\n                    y: mapRect.y,\n                    width: mapRect.width,\n                    height: mapRect.height,\n                },\n            });\n        }\n    }\n    /*\n    private findContainerElement(): HTMLElement | null {\n      if (!this.element) {\n        return null;\n      }\n  \n      let parentElement = this.element.parentElement;\n      while (parentElement !== null) {\n        if (window.getComputedStyle(parentElement).overflowY !== 'hidden') {\n          return parentElement;\n        }\n  \n        parentElement = parentElement.parentElement;\n      }\n  \n      return null;\n    }\n    */\n    /**\n     * Set the event listener on the map for 'onCameraIdle' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraIdleListener(callback) {\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n        }\n        if (callback) {\n            this.onCameraIdleListener = await CapacitorGoogleMaps.addListener('onCameraIdle', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraIdleListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onBoundsChanged' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnBoundsChangedListener(callback) {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n        }\n        if (callback) {\n            this.onBoundsChangedListener = await CapacitorGoogleMaps.addListener('onBoundsChanged', this.generateCallback(callback));\n        }\n        else {\n            this.onBoundsChangedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onCameraMoveStarted' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnCameraMoveStartedListener(callback) {\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n        }\n        if (callback) {\n            this.onCameraMoveStartedListener = await CapacitorGoogleMaps.addListener('onCameraMoveStarted', this.generateCallback(callback));\n        }\n        else {\n            this.onCameraMoveStartedListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterClickListener(callback) {\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterClickListener = await CapacitorGoogleMaps.addListener('onClusterClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onClusterInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnClusterInfoWindowClickListener(callback) {\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onClusterInfoWindowClickListener =\n                await CapacitorGoogleMaps.addListener('onClusterInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onInfoWindowClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnInfoWindowClickListener(callback) {\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n        }\n        if (callback) {\n            this.onInfoWindowClickListener = await CapacitorGoogleMaps.addListener('onInfoWindowClick', this.generateCallback(callback));\n        }\n        else {\n            this.onInfoWindowClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMapClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMapClickListener(callback) {\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n        }\n        if (callback) {\n            this.onMapClickListener = await CapacitorGoogleMaps.addListener('onMapClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMapClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMarkerClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMarkerClickListener(callback) {\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n        }\n        if (callback) {\n            this.onMarkerClickListener = await CapacitorGoogleMaps.addListener('onMarkerClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMarkerClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationButtonClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationButtonClickListener(callback) {\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationButtonClickListener =\n                await CapacitorGoogleMaps.addListener('onMyLocationButtonClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationButtonClickListener = undefined;\n        }\n    }\n    /**\n     * Set the event listener on the map for 'onMyLocationClick' events.\n     *\n     * @param callback\n     * @returns\n     */\n    async setOnMyLocationClickListener(callback) {\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n        }\n        if (callback) {\n            this.onMyLocationClickListener = await CapacitorGoogleMaps.addListener('onMyLocationClick', this.generateCallback(callback));\n        }\n        else {\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    /**\n     * Remove all event listeners on the map.\n     *\n     * @param callback\n     * @returns\n     */\n    async removeAllMapListeners() {\n        if (this.onBoundsChangedListener) {\n            this.onBoundsChangedListener.remove();\n            this.onBoundsChangedListener = undefined;\n        }\n        if (this.onCameraIdleListener) {\n            this.onCameraIdleListener.remove();\n            this.onCameraIdleListener = undefined;\n        }\n        if (this.onCameraMoveStartedListener) {\n            this.onCameraMoveStartedListener.remove();\n            this.onCameraMoveStartedListener = undefined;\n        }\n        if (this.onClusterClickListener) {\n            this.onClusterClickListener.remove();\n            this.onClusterClickListener = undefined;\n        }\n        if (this.onClusterInfoWindowClickListener) {\n            this.onClusterInfoWindowClickListener.remove();\n            this.onClusterInfoWindowClickListener = undefined;\n        }\n        if (this.onInfoWindowClickListener) {\n            this.onInfoWindowClickListener.remove();\n            this.onInfoWindowClickListener = undefined;\n        }\n        if (this.onMapClickListener) {\n            this.onMapClickListener.remove();\n            this.onMapClickListener = undefined;\n        }\n        if (this.onMarkerClickListener) {\n            this.onMarkerClickListener.remove();\n            this.onMarkerClickListener = undefined;\n        }\n        if (this.onMyLocationButtonClickListener) {\n            this.onMyLocationButtonClickListener.remove();\n            this.onMyLocationButtonClickListener = undefined;\n        }\n        if (this.onMyLocationClickListener) {\n            this.onMyLocationClickListener.remove();\n            this.onMyLocationClickListener = undefined;\n        }\n    }\n    generateCallback(callback) {\n        const mapId = this.id;\n        return (data) => {\n            if (data.mapId == mapId) {\n                callback(data);\n            }\n        };\n    }\n}\n"],"names":["Capacitor","CapacitorGoogleMaps","MapCustomElement","HTMLElement","constructor","connectedCallback","console","log","getPlatform","style","overflow","overflowDiv","document","createElement","height","appendChild","customElements","define","GoogleMap","id","element","handleScrollEvent","updateMapBounds","create","options","callback","newMap","Error","config","androidLiteMode","undefined","dataset","internalId","elementBounds","getBoundingClientRect","width","x","y","devicePixelRatio","window","initScrolling","isNativePlatform","onMapReadyListener","addListener","data","mapId","remove","enableClustering","disableClustering","addMarker","marker","res","addMarkers","markers","ids","removeMarker","markerId","removeMarkers","markerIds","destroy","disableScrolling","removeAllMapListeners","setCamera","setMapType","mapType","enableIndoorMaps","enabled","enableTrafficLayer","enableAccessibilityElements","enableCurrentLocation","setPadding","padding","getMapBounds","ionContents","getElementsByTagName","i","length","scrollEvents","addEventListener","screen","orientation","setTimeout","removeEventListener","mapRect","onScroll","mapBounds","setOnCameraIdleListener","onCameraIdleListener","generateCallback","setOnBoundsChangedListener","onBoundsChangedListener","setOnCameraMoveStartedListener","onCameraMoveStartedListener","setOnClusterClickListener","onClusterClickListener","setOnClusterInfoWindowClickListener","onClusterInfoWindowClickListener","setOnInfoWindowClickListener","onInfoWindowClickListener","setOnMapClickListener","onMapClickListener","setOnMarkerClickListener","onMarkerClickListener","setOnMyLocationButtonClickListener","onMyLocationButtonClickListener","setOnMyLocationClickListener","onMyLocationClickListener"],"sourceRoot":"webpack:///"}